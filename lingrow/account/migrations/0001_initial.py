# Generated by Django 4.1.1 on 2022-10-30 01:10

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('admin_school_management', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(message='Please enter a valid first name. Minimum 2 and maximum 64 alphabets allowed.', regex='^[a-zA-Z]{2,64}$')])),
                ('middle_name', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid first name. Minimum 2 and maximum 64 alphabets allowed.', regex='^[a-zA-Z]{2,64}$')])),
                ('last_name', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(message='Please enter a valid first name. Minimum 2 and maximum 64 alphabets allowed.', regex='^[a-zA-Z]{2,64}$')])),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'parent'), (2, 'teacher'), (3, 'researcher'), (4, 'admin')])),
                ('phone', models.IntegerField(blank=True, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid phone number. Digits length should be 10.', regex='^[0-9]{10}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Researcher',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('researcher_id', models.CharField(blank=True, max_length=30, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid id. Maximum 30 alphabets and digits allowed.', regex='^[a-zA-Z0-9]{4,30}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('teacher_id', models.CharField(blank=True, max_length=30, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid id. Maximum 30 alphabets and digits allowed.', regex='^[a-zA-Z0-9]{4,30}$')])),
                ('classrooms', models.ManyToManyField(blank=True, to='admin_school_management.classroom')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_school_management.school')),
            ],
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(message='Please enter a valid first name. Minimum 2 and maximum 64 alphabets allowed.', regex='^[a-zA-Z]{2,64}$')])),
                ('middle_name', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid first name. Minimum 2 and maximum 64 alphabets allowed.', regex='^[a-zA-Z]{2,64}$')])),
                ('last_name', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(message='Please enter a valid first name. Minimum 2 and maximum 64 alphabets allowed.', regex='^[a-zA-Z]{2,64}$')])),
                ('student_id', models.CharField(blank=True, max_length=30, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid id. Maximum 30 alphabets and digits allowed.', regex='^[a-zA-Z0-9]{4,30}$')])),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_school_management.classroom')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_school_management.school')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.parent')),
            ],
        ),
    ]
